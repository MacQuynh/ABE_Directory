let graphqlHTTP,schema,express,bodyParser,cors,morgan,config;_ea7‍.w("express-graphql",[["graphqlHTTP",["graphqlHTTP"],function(v){graphqlHTTP=v}]]);_ea7‍.w("./schema/",[["schema",["schema"],function(v){schema=v}]]);_ea7‍.w("express",[["default",["express"],function(v){express=v}]]);_ea7‍.w("body-parser",[["default",["bodyParser"],function(v){bodyParser=v}]]);_ea7‍.w("cors",[["default",["cors"],function(v){cors=v}]]);_ea7‍.w("morgan",[["default",["morgan"],function(v){morgan=v}]]);_ea7‍.w("./config",[["*",null,function(v){config=v}]]);


// The code below starts a bare-bone express web server







async function main() {
  const server = express();
  server.use(cors());
  server.use(morgan('dev'));
  server.use(bodyParser.urlencoded({ extended: false }));
  server.use(bodyParser.json());
  server.use('/:fav.ico', (req, res) => res.sendStatus(204));

  server.use(
    '/graphql',
    graphqlHTTP({
      schema,
      graphiql: true,
    })
  );
  
  server.use('/', (req, res) => {
    res.send('Hello from demo 5b');
  });

  server.listen(config.port, () => {
    console.log(`Server URL: http://localhost:${config.port}/`);
  });
}

main();