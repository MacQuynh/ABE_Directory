let GraphQLID,GraphQLObjectType,GraphQLString,GraphQLInt,GraphQLNonNull,User;_587‍.x([["default",()=>_587‍.o]]);_587‍.w("graphql",[["GraphQLID",["GraphQLID"],function(v){GraphQLID=v}],["GraphQLObjectType",["GraphQLObjectType"],function(v){GraphQLObjectType=v}],["GraphQLString",["GraphQLString"],function(v){GraphQLString=v}],["GraphQLInt",["GraphQLInt"],function(v){GraphQLInt=v}],["GraphQLNonNull",["GraphQLNonNull"],function(v){GraphQLNonNull=v}]]);_587‍.w("./user",[["default",["User"],function(v){User=v}]]);






  
  
  
  const Approach = new GraphQLObjectType({
    name: 'Approach',
    fields: {
      id: { type: new GraphQLNonNull(GraphQLID) },
      content: { type: new GraphQLNonNull(GraphQLString) },
      voteCount: { type: new GraphQLNonNull(GraphQLInt) },
      createdAt: {
        type: new GraphQLNonNull(GraphQLString),
        resolve: ({ createdAt }) => createdAt.toISOString(),
      },
      author: {
        type: new GraphQLNonNull(User),
        resolve: (source, args, { pgApi }) =>
          pgApi.userInfo(source.userId),
      },
    },
  });
  
  _587‍.d(Approach);
  