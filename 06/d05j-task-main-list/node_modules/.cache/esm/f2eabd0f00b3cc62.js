let graphqlHTTP,schema,express,cors,morgan,config,pgClient;_00b‍.w("express-graphql",[["graphqlHTTP",["graphqlHTTP"],function(v){graphqlHTTP=v}]]);_00b‍.w("./schema",[["schema",["schema"],function(v){schema=v}]]);_00b‍.w("express",[["default",["express"],function(v){express=v}]]);_00b‍.w("cors",[["default",["cors"],function(v){cors=v}]]);_00b‍.w("morgan",[["default",["morgan"],function(v){morgan=v}]]);_00b‍.w("./config",[["*",null,function(v){config=v}]]);_00b‍.w("./db/pg-client",[["default",["pgClient"],function(v){pgClient=v}]]);










async function main() {
  const { pgPool } = await pgClient();
  const server = express();
  server.use(cors());
  server.use(morgan('dev'));
  server.use(express.urlencoded({ extended: false }));
  server.use(express.json());
  server.use('/:fav.ico', (req, res) => res.sendStatus(204));

  server.use(
    '/graphql',
    graphqlHTTP({
      schema,
      context: { pgPool },
      graphiql: true,
    })
  );

  server.listen(config.port, () => {
    console.log(`Server URL: http://localhost:${config.port}/`);
  });
}

main();